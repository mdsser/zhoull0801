<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MySQL索引</title>
      <link href="/2021/06/11/MySQL%E7%B4%A2%E5%BC%95/"/>
      <url>/2021/06/11/MySQL%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<p><strong>MySQL索引</strong></p><p>MySQL支持诸多存储引擎，而各种存储引擎对索引的支持也各不相同，因此MySQL数据库支持多种索引类型，如BTree索引，哈希索引，全文索引等等。</p><p>为了避免混乱，本文将只关注于BTree索引，因为这是平常使用MySQL时主要打交道的索引。</p><p>MySQL官方对索引的定义为：索引（Index）是帮助MySQL高效获取数据的数据结构。提取句子主干，就可以得到索引的本质：<strong>索引是数据结构。</strong></p><hr><p><strong>MySQL索引原理</strong></p><p>==索引目的==</p><p>索引的目的在于提高查询效率，可以类比字典，如果要查“mysql”这个单词，我们肯定需要定位到m字母，然后从下往下找到y字母，再找到剩下的sql。</p><p>如果没有索引，那么你可能需要把所有单词看一遍才能找到你想要的，如果我想找到m开头的单词呢？或者ze开头的单词呢？是不是觉得如果没有索引，这个事情根本无法完成？</p><p>咱们去图书馆借书也是一样，如果你要借某一本书，一定是先找到对应的分类科目，再找到对应的编号，这是生活中活生生的例子，通用索引，可以加快查询速度，快速定位。</p><hr><p>==索引原理==</p><p>所有索引原理都是一样的，通过不断的缩小想要获得数据的范围来筛选出最终想要的结果，同时把随机的事件变成顺序的事件，也就是我们总是通过同一种查找方式来锁定数据。</p><p>数据库也是一样，但显然要复杂许多，因为不仅面临着等值查询，还有范围查询(&gt;、&lt;、between)、模糊查询(like)、并集查询(or)、多值匹配（in【in本质上属于多个or】）等等。</p><hr><p>==索引结构==</p><p>任何一种数据结构都不是凭空产生的，一定会有它的背景和使用场景，我们现在总结一下，我们需要这种数据结构能够做些什么</p><p>其实很简单，那就是：每次查找数据时把磁盘IO次数控制在一个很小的数量级，最好是常数数量级。那么我们就想到如果一个高度可控的多路搜索树是否能满足需求呢？</p><p>就这样，b+树应运而生。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下的压缩与解压缩命令</title>
      <link href="/2021/06/10/Linux%E4%B8%8B%E7%9A%84%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/06/10/Linux%E4%B8%8B%E7%9A%84%E5%8E%8B%E7%BC%A9%E4%B8%8E%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<hr><hr><p><strong>gzip命令</strong></p><p>gzip命令用来压缩文件。gzip是个使用广泛的压缩程序，文件经它压缩过后，其名称后面会多处“.gz”扩展名。</p><p>gzip是在Linux系统中经常使用的一个对文件进行压缩和解压缩的命令，既方便又好用。gzip不仅可以用来压缩大的、较少使用的文件以节省磁盘空间，还可以和tar命令一起构成Linux操作系统中比较流行的压缩文件格式。据统计，gzip命令对文本文件有60%～70%的压缩率。减少文件大小有两个明显的好处，一是可以减少存储空间，二是通过网络传输文件时，可以减少传输的时间。</p><p><strong>选项：</strong></p><p>-a：使用ASCII文字模式；</p><p>-d：解开压缩文件；</p><p>-f：强行压缩文件。不理会文件名称或硬连接是否存在以及该文件是否为符号连接；</p><p>-h：在线帮助；</p><p>-l：列出压缩文件的相关信息；</p><p>-L：显示版本与版权信息；</p><p>-n：压缩文件时，不保存原来的文件名称及时间戳记；</p><p>-N：压缩文件时，保存原来的文件名称及时间戳记；</p><p>-q：不显示警告信息；</p><p>-r：递归处理，将指定目录下的所有文件及子目录一并处理；</p><p>-S或&lt;压缩字尾字符串&gt;或—-suffix&lt;压缩字尾字符串&gt;：更改压缩字尾字符串；</p><p>-t：测试压缩文件是否正确无误；</p><p>-v：显示指令执行过程；</p><p>-V：显示版本信息；</p><p>-&lt;压缩效率&gt;：压缩效率是一个介于1~9的数值，预设值为“6”，指定愈大的数值，压缩效率就会愈高；</p><p>–best：此参数的效果和指定“-9”参数相同；</p><p>–fast：此参数的效果和指定“-1”参数相同。</p><hr><p>实例</p><p>\1. 把test6目录下的每个文件压缩成.gz文件</p><p>gzip *</p><p>\2. 把上例中每个压缩的文件解压，并列出详细的信息</p><p>gzip -dv *</p><p>\3. 详细显示例1中每个压缩的文件的信息，并不解压</p><p>gzip -l *</p><p>4.压缩一个tar备份文件，此时压缩文件的扩展名为.tar.gz</p><p>gzip -r log.tar</p><p>\5. 递归的压缩目录</p><p>gzip -rv test6</p><p>这样，所有test下面的文件都变成了*.gz，目录依然存在只是目录里面的文件相应变成了*.gz.这就是压缩，和打包不同。因为是对目录操作，所以需要加上-r选项，这样也可以对子目录进行递归了。</p><p>\6. 递归地解压目录</p><p>gzip -dr test6</p><hr><p><strong>gunzip命令</strong></p><p>gunzip命令用来解压缩文件。gunzip是个使用广泛的解压缩程序，它用于解开被<a href="http://man.linuxde.net/gzip">gzip</a>压缩过的文件，这些压缩文件预设最后的扩展名为.gz。事实上gunzip就是gzip的硬连接，因此不论是压缩或解压缩，都可通过gzip指令单独完成。</p><p><strong>选项：</strong></p><p>-a：使用ASCII文字模式；</p><p>-c：把解压后的文件输出到标准输出设备；</p><p>-f：强行解开压缩文件，不理会文件名称或硬连接是否存在以及该文件是否为符号连接；</p><p>-h：在线帮助；</p><p>-l：列出压缩文件的相关信息；</p><p>-L：显示版本与版权信息；</p><p>-n：解压缩时，若压缩文件内含有原来的文件名称及时间戳记，则将其忽略不予处理；</p><p>-N：解压缩时，若压缩文件内含有原来的文件名称及时间戳记，则将其回存到解开的文件上；</p><p>-q：不显示警告信息；</p><p>-r：递归处理，将指定目录下的所有文件及子目录一并处理；</p><p>-S或&lt;压缩字尾字符串&gt;或—-suffix&lt;压缩字尾字符串&gt;：更改压缩字尾字符串；</p><p>-t：测试压缩文件是否正确无误；</p><p>-v：显示指令执行过程；</p><p>-V：显示版本信息；</p><hr><p>实例</p><p>\1. 首先将/etc目录下的所有文件以及子目录进行压缩，备份压缩包etc.<a href="http://man.linuxde.net/zip">zip</a>到/opt目录，然后对etc.zip文件进行gzip压缩，设置gzip的压缩级别为9。</p><p>zip –r /opt/etc.zip /etc</p><p>gzip -9v /opt/etc.zip</p><p>\2. 查看上述etc.zip.gz文件的压缩信息。</p><p>gzip -l /opt/etc.zip.gz</p><p>compressed    uncompressed ratio uncompressed_name</p><p>11938745      12767265  6.5% /opt/etc.zip</p><p>\3. 解压上述etc.zip.gz文件到当前目录。</p><p>[root@mylinux ~]#gzip –d /opt/etc.zip.gz</p><p>或者执行</p><p>[root@mylinux ~]#gunzip /opt/etc.zip.gz</p><p>通过上面的示例可以知道gzip –d等价于gunzip命令。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 基础命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL主从复制</title>
      <link href="/2021/06/10/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
      <url>/2021/06/10/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<p><strong>一、MySQL主从复制</strong></p><p>MySQL作为世界上使用最为广泛的数据库之一，免费是其原因之一；但不可忽略的是它本身的功能的确很强大。随着技术的发展，在实际的生产环境中，由单台MySQL数据库服务器不能满足实际的需求。此时数据库集群就很好的解决了这个问题了。采用MySQL分布式集群，能够搭建一个高并发、负载均衡的集群服务器。在此之前我们必须要保证每台MySQL服务器里的数据同步。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ARP</title>
      <link href="/2021/06/10/ARP/"/>
      <url>/2021/06/10/ARP/</url>
      
        <content type="html"><![CDATA[<p><strong>什么是ARP？ARP作用和使用场景</strong></p><hr><p><strong>一、什么是ARP</strong><br>ARP是地址转换协议（Address Resolution Protocol）的英文缩写，它是一个链路层协议，工作在OSI 模型的第二层，在本层和硬件接口间进行联系，同时对上层（网络层）提供服务。我们知道二层的以太网交换设备并不能识别32位的IP地址，它们是以48位以太网地址（就是我们常说的MAC地址）传输以太网数据包的。也就是说IP数据包在局域网内部传输时并不是靠IP地址而是靠MAC地址来识别目标的，因此IP地址与MAC地址之间就必须存在一种对应关系，而ARP协议就是用来确定这种对应关系的协议。<br>ARP是地址解析协议，用于根据目的IP地址来解析MAC地址，进行二层通讯。<br><strong>二、工作原理</strong><br>工作原理是通过广播发送ARP查询请求目的IP的MAC地址，与发送方处于同一广播域的主机收到该请求后，如果确认查询的IP是本机，则单播回应本机的MAC地址；如果发现查询的IP不是本机，则不回应；发送方接收到ARP回应后，把该IP和MAC地址写入本机ARP缓存表，下次再与该IP进行二层通讯，则直接使用表中的记录来进行转发。<br><strong>三、ARP的使用场景</strong><br>1、如果目的IP和本机IP属于同一网段，则ARP请求查询的就是目的IP的MAC地址<br>2、如果目的IP和本机IP不属于同一网段，当本机存在到达目的IP的路由时，则ARP请求查询的就是该路由下一跳的MAC地址；如果没有明细路由，就请求查询缺省路由下一跳（也就是网关）的MAC地址。</p>]]></content>
      
      
      <categories>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 以太网 </tag>
            
            <tag> 局域网 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础命令</title>
      <link href="/2021/06/07/Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/06/07/Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<hr><p>一、基础命令</p><p>​    ls        //列出目录内容</p><p>​                d    //目录文件</p><p>​                b   //块设备文件（block）</p><p>​                c   //字符设备文件（character）</p><p>​                l   //符号链接文件（symbolic link file）                </p><p>​                p   //命令管道（pipe）</p><p>​                s   //套接字文件（socket）</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周乐的第一篇博客</title>
      <link href="/2021/06/05/%E5%91%A8%E4%B9%90%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/06/05/%E5%91%A8%E4%B9%90%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>friends</title>
      <link href="/friends/index.html"/>
      <url>/friends/index.html</url>
      
        <content type="html"><![CDATA[<p>阿里云镜像站:<a href="https://developer.aliyun.com/special/mirrors/notice">阿里云镜像站</a></p><p>清华大学镜像站：<a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p><p>Strong博客：<a href="https://www.hanzz.red/">Strong-在线文档库</a></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>gallery</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>contact</title>
      <link href="/contact/index.html"/>
      <url>/contact/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>北极光</title>
      <link href="/%E5%8C%97%E6%9E%81%E5%85%89/index.html"/>
      <url>/%E5%8C%97%E6%9E%81%E5%85%89/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
